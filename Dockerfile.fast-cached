# 高性能构建Dockerfile - 专注于构建速度和缓存利用
FROM ubuntu:18.04

# 设置环境变量，避免交互式提示
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# 安装系统构建依赖（稳定的层，适合缓存）
RUN apt-get update && apt-get install -y \
    build-essential \
    wget \
    curl \
    git \
    zlib1g-dev \
    libncurses5-dev \
    libgdbm-dev \
    libnss3-dev \
    libssl-dev \
    libreadline-dev \
    libffi-dev \
    libsqlite3-dev \
    libbz2-dev \
    libpng-dev \
    libfreetype6-dev \
    pkg-config \
    graphviz

# 构建 Python 3.5.10（稳定的层，适合缓存）
WORKDIR /usr/src
RUN wget https://www.python.org/ftp/python/3.5.10/Python-3.5.10.tgz && \
    tar xzf Python-3.5.10.tgz && \
    cd Python-3.5.10 && \
    ./configure --enable-optimizations && \
    make -j$(nproc) && \
    make altinstall

# 确保使用 pip，升级到兼容版本（稳定的层）
RUN /usr/local/bin/python3.5 -m ensurepip && \
    /usr/local/bin/python3.5 -m pip install --upgrade "pip==20.3.4" setuptools wheel

# 项目代码目录
WORKDIR /app

# 复制依赖文件（单独层，依赖文件变化时才重建）
COPY requirements.txt .
RUN /usr/local/bin/python3.5 -m pip install -r requirements.txt

# 创建符号链接（稳定的层）
RUN ln -s /usr/local/bin/python3.5 /usr/local/bin/python3

# 复制项目代码（最后层，代码变化时才重建）
COPY . .

# 启动交互
CMD ["/usr/local/bin/python3.5"]